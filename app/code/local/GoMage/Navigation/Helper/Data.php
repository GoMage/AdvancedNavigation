<?php eval(base64_decode("LyoqICogR29NYWdlIEFkdmFuY2VkIE5hdmlnYXRpb24gRXh0ZW5zaW9uICogKiBAY2F0ZWdvcnkgRXh0ZW5zaW9uICogQGNvcHlyaWdodCBDb3B5cmlnaHQgKGMpIDIwMTAtMjAxMyBHb01hZ2UgKGh0dHA6Ly93d3cuZ29tYWdlLmNvbSkgKiBAYXV0aG9yIEdvTWFnZSAqIEBsaWNlbnNlIGh0dHA6Ly93d3cuZ29tYWdlLmNvbS9saWNlbnNlLWFncmVlbWVudC8gU2luZ2xlIGRvbWFpbiBsaWNlbnNlICogQHRlcm1zIG9mIHVzZSBodHRwOi8vd3d3LmdvbWFnZS5jb20vdGVybXMtb2YtdXNlICogQHZlcnNpb24gUmVsZWFzZTogNC4wICogQHNpbmNlIENsYXNzIGF2YWlsYWJsZSBzaW5jZSBSZWxlYXNlIDEuMCAqLyBjbGFzcyBHb01hZ2VfTmF2aWdhdGlvbl9IZWxwZXJfRGF0YSBleHRlbmRzIE1hZ2VfQ29yZV9IZWxwZXJfQWJzdHJhY3R7IHB1YmxpYyBmdW5jdGlvbiBnZXRDb25maWdEYXRhKCRub2RlKXsgcmV0dXJuIE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdnb21hZ2VfbmF2aWdhdGlvbi8nLiRub2RlKTsgfSBwdWJsaWMgZnVuY3Rpb24gZ2V0QWxsU3RvcmVEb21haW5zKCl7ICRkb21haW5zID0gYXJyYXkoKTsgZm9yZWFjaCAoTWFnZTo6YXBwKCktPmdldFdlYnNpdGVzKCkgYXMgJHdlYnNpdGUpIHsgJHVybCA9ICR3ZWJzaXRlLT5nZXRDb25maWcoJ3dlYi91bnNlY3VyZS9iYXNlX3VybCcpOyBpZigkZG9tYWluID0gdHJpbShwcmVnX3JlcGxhY2UoJy9eLio/XFwvXFwvKC4qKT9cXC8vJywgJyQxJywgJHVybCkpKXsgJGRvbWFpbnNbXSA9ICRkb21haW47IH0gJHVybCA9ICR3ZWJzaXRlLT5nZXRDb25maWcoJ3dlYi9zZWN1cmUvYmFzZV91cmwnKTsgaWYoJGRvbWFpbiA9IHRyaW0ocHJlZ19yZXBsYWNlKCcvXi4qP1xcL1xcLyguKik/XFwvLycsICckMScsICR1cmwpKSl7ICRkb21haW5zW10gPSAkZG9tYWluOyB9IH0gcmV0dXJuIGFycmF5X3VuaXF1ZSgkZG9tYWlucyk7IH0gcHVibGljIGZ1bmN0aW9uIGdldEF2YWlsYWJlbFdlYnNpdGVzKCl7IHJldHVybiAkdGhpcy0+X3coKTsgfSBwdWJsaWMgZnVuY3Rpb24gZ2V0QXZhaWxhdmVsV2Vic2l0ZXMoKXsgcmV0dXJuICR0aGlzLT5fdygpOyB9IHByb3RlY3RlZCBmdW5jdGlvbiBfdygpeyBpZighTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9hY3RpdmF0aW9uL2FkdmFuY2VkbmF2aWdhdGlvbi9pbnN0YWxsZWQnKSB8fCAoaW50dmFsKE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdnb21hZ2VfYWN0aXZhdGlvbi9hZHZhbmNlZG5hdmlnYXRpb24vY291bnQnKSkgPiAxMCkpIHsgcmV0dXJuIGFycmF5KCk7IH0gJHRpbWVfdG9fdXBkYXRlID0gNjAqNjAqMjQqMTU7ICRyID0gTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9hY3RpdmF0aW9uL2FkdmFuY2VkbmF2aWdhdGlvbi9hcicpOyAkdCA9IE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdnb21hZ2VfYWN0aXZhdGlvbi9hZHZhbmNlZG5hdmlnYXRpb24vdGltZScpOyAkcyA9IE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdnb21hZ2VfYWN0aXZhdGlvbi9hZHZhbmNlZG5hdmlnYXRpb24vd2Vic2l0ZXMnKTsgJGxhc3RfY2hlY2sgPSBzdHJfcmVwbGFjZSgkciwgJycsIE1hZ2U6OmhlbHBlcignY29yZScpLT5kZWNyeXB0KCR0KSk7ICRhbGxzaXRlcyA9IGV4cGxvZGUoJywnLCBzdHJfcmVwbGFjZSgkciwgJycsIE1hZ2U6OmhlbHBlcignY29yZScpLT5kZWNyeXB0KCRzKSkpOyAkYWxsc2l0ZXMgPSBhcnJheV9kaWZmKCRhbGxzaXRlcywgYXJyYXkoIiIpKTsgaWYoKCRsYXN0X2NoZWNrKyR0aW1lX3RvX3VwZGF0ZSkgPCB0aW1lKCkpeyAkdGhpcy0+YShNYWdlOjpnZXRTdG9yZUNvbmZpZygnZ29tYWdlX2FjdGl2YXRpb24vYWR2YW5jZWRuYXZpZ2F0aW9uL2tleScpLCBpbnR2YWwoTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9hY3RpdmF0aW9uL2FkdmFuY2VkbmF2aWdhdGlvbi9jb3VudCcpKSwgaW1wbG9kZSgnLCcsICRhbGxzaXRlcykpOyB9IHJldHVybiAkYWxsc2l0ZXM7IH0gcHVibGljIGZ1bmN0aW9uIGEoJGssICRjID0gMCwgJHMgPSAnJyl7ICRjaCA9IGN1cmxfaW5pdCgpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVVJMLCBzcHJpbnRmKCdodHRwczovL3d3dy5nb21hZ2UuY29tL2luZGV4LnBocC9nb21hZ2VfZG93bmxvYWRhYmxlL2tleS9jaGVjaycpKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BPU1QsIHRydWUpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUE9TVEZJRUxEUywgJ2tleT0nLnVybGVuY29kZSgkaykuJyZza3U9YWR2YW5jZWQtbmF2aWdhdGlvbiZkb21haW5zPScudXJsZW5jb2RlKGltcGxvZGUoJywnLCAkdGhpcy0+Z2V0QWxsU3RvcmVEb21haW5zKCkpKS4nJnZlcj0nLnVybGVuY29kZSgnNC4xJykpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVElNRU9VVCwgMzApOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUkVUVVJOVFJBTlNGRVIsIHRydWUpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfU1NMX1ZFUklGWVBFRVIsIDApOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfU1NMX1ZFUklGWUhPU1QsIDApOyAkY29udGVudCA9IGN1cmxfZXhlYygkY2gpOyAkciA9IFplbmRfSnNvbjo6ZGVjb2RlKCRjb250ZW50KTsgJGUgPSBNYWdlOjpoZWxwZXIoJ2NvcmUnKTsgaWYoZW1wdHkoJHIpKXsgJHZhbHVlMSA9IE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdnb21hZ2VfYWN0aXZhdGlvbi9hZHZhbmNlZG5hdmlnYXRpb24vYXInKTsgJGdyb3VwcyA9IGFycmF5KCAnYWR2YW5jZWRuYXZpZ2F0aW9uJz0+YXJyYXkoICdmaWVsZHMnPT5hcnJheSggJ2FyJz0+YXJyYXkoICd2YWx1ZSc9PiR2YWx1ZTEgKSwgJ3dlYnNpdGVzJz0+YXJyYXkoICd2YWx1ZSc9PihzdHJpbmcpTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9hY3RpdmF0aW9uL2FkdmFuY2VkbmF2aWdhdGlvbi93ZWJzaXRlcycpICksICd0aW1lJz0+YXJyYXkoICd2YWx1ZSc9PihzdHJpbmcpJGUtPmVuY3J5cHQoJHZhbHVlMS4odGltZSgpLSg2MCo2MCoyNCoxNS0xODAwKSkuJHZhbHVlMSkgKSwgJ2NvdW50Jz0+YXJyYXkoICd2YWx1ZSc9PiRjKzEpICkgKSApOyBNYWdlOjpnZXRNb2RlbCgnYWRtaW5odG1sL2NvbmZpZ19kYXRhJykgLT5zZXRTZWN0aW9uKCdnb21hZ2VfYWN0aXZhdGlvbicpIC0+c2V0R3JvdXBzKCRncm91cHMpIC0+c2F2ZSgpOyBNYWdlOjpnZXRDb25maWcoKS0+cmVpbml0KCk7IE1hZ2U6OmFwcCgpLT5yZWluaXRTdG9yZXMoKTsgcmV0dXJuOyB9ICR2YWx1ZTEgPSAnJzsgJHZhbHVlMiA9ICcnOyBpZihpc3NldCgkclsnZCddKSAmJiBpc3NldCgkclsnYyddKSl7ICR2YWx1ZTEgPSAkZS0+ZW5jcnlwdChiYXNlNjRfZW5jb2RlKFplbmRfSnNvbjo6ZW5jb2RlKCRyKSkpOyBpZiAoISRzKSAkcyA9IE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdnb21hZ2VfYWN0aXZhdGlvbi9hZHZhbmNlZG5hdmlnYXRpb24vd2Vic2l0ZXMnKTsgJHMgPSBhcnJheV9zbGljZShleHBsb2RlKCcsJywgJHMpLCAwLCAkclsnYyddKTsgJHZhbHVlMiA9ICRlLT5lbmNyeXB0KCR2YWx1ZTEuaW1wbG9kZSgnLCcsICRzKS4kdmFsdWUxKTsgfSAkZ3JvdXBzID0gYXJyYXkoICdhZHZhbmNlZG5hdmlnYXRpb24nPT5hcnJheSggJ2ZpZWxkcyc9PmFycmF5KCAnYXInPT5hcnJheSggJ3ZhbHVlJz0+JHZhbHVlMSApLCAnd2Vic2l0ZXMnPT5hcnJheSggJ3ZhbHVlJz0+KHN0cmluZykkdmFsdWUyICksICd0aW1lJz0+YXJyYXkoICd2YWx1ZSc9PihzdHJpbmcpJGUtPmVuY3J5cHQoJHZhbHVlMS50aW1lKCkuJHZhbHVlMSkgKSwgJ2luc3RhbGxlZCc9PmFycmF5KCAndmFsdWUnPT4xICksICdjb3VudCc9PmFycmF5KCAndmFsdWUnPT4wKSApICkgKTsgTWFnZTo6Z2V0TW9kZWwoJ2FkbWluaHRtbC9jb25maWdfZGF0YScpIC0+c2V0U2VjdGlvbignZ29tYWdlX2FjdGl2YXRpb24nKSAtPnNldEdyb3VwcygkZ3JvdXBzKSAtPnNhdmUoKTsgTWFnZTo6Z2V0Q29uZmlnKCktPnJlaW5pdCgpOyBNYWdlOjphcHAoKS0+cmVpbml0U3RvcmVzKCk7IH0gcHVibGljIGZ1bmN0aW9uIGdhKCl7IHJldHVybiBaZW5kX0pzb246OmRlY29kZShiYXNlNjRfZGVjb2RlKE1hZ2U6OmhlbHBlcignY29yZScpLT5kZWNyeXB0KE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdnb21hZ2VfYWN0aXZhdGlvbi9hZHZhbmNlZG5hdmlnYXRpb24vYXInKSkpKTsgfSBwdWJsaWMgZnVuY3Rpb24gaXNHb21hZ2VOYXZpZ2F0aW9uKCl7IGlmICgkdGhpcy0+aXNNb2JpbGVEZXZpY2UoKSAmJiBNYWdlOjpnZXRTdG9yZUNvbmZpZ0ZsYWcoJ2dvbWFnZV9uYXZpZ2F0aW9uL2dlbmVyYWwvZGlzYWJsZV9tb2JpbGUnKSl7IHJldHVybiBmYWxzZTsgfSByZXR1cm4gaW5fYXJyYXkoTWFnZTo6YXBwKCktPmdldFN0b3JlKCktPmdldFdlYnNpdGVJZCgpLCAkdGhpcy0+Z2V0QXZhaWxhdmVsV2Vic2l0ZXMoKSkgJiYgTWFnZTo6Z2V0U3RvcmVDb25maWdGbGFnKCdnb21hZ2VfbmF2aWdhdGlvbi9nZW5lcmFsL21vZGUnKTsgfSBwdWJsaWMgZnVuY3Rpb24gaXNHb21hZ2VOYXZpZ2F0aW9uQWpheCgpeyByZXR1cm4gJHRoaXMtPmlzR29tYWdlTmF2aWdhdGlvbigpICYmIE1hZ2U6OmdldFN0b3JlQ29uZmlnRmxhZygnZ29tYWdlX25hdmlnYXRpb24vZ2VuZXJhbC9wYWdlcicpICYmIChNYWdlOjpyZWdpc3RyeSgnY3VycmVudF9jYXRlZ29yeScpIHx8IChNYWdlOjphcHAoKS0+Z2V0RnJvbnRDb250cm9sbGVyKCktPmdldFJlcXVlc3QoKS0+Z2V0Um91dGVOYW1lKCkgPT0gJ2NhdGFsb2dzZWFyY2gnICYmIE1hZ2U6OmFwcCgpLT5nZXRGcm9udENvbnRyb2xsZXIoKS0+Z2V0UmVxdWVzdCgpLT5nZXRDb250cm9sbGVyTmFtZSgpICE9ICdhZHZhbmNlZCcpKTsgfSBwdWJsaWMgZnVuY3Rpb24gaXNHb21hZ2VOYXZpZ2F0aW9uQ2xlYXJBamF4KCl7IHJldHVybiAkdGhpcy0+aXNHb21hZ2VOYXZpZ2F0aW9uKCkmJiAoTWFnZTo6cmVnaXN0cnkoJ2N1cnJlbnRfY2F0ZWdvcnknKSB8fCAoTWFnZTo6YXBwKCktPmdldEZyb250Q29udHJvbGxlcigpLT5nZXRSZXF1ZXN0KCktPmdldFJvdXRlTmFtZSgpID09ICdjYXRhbG9nc2VhcmNoJyAmJiBNYWdlOjphcHAoKS0+Z2V0RnJvbnRDb250cm9sbGVyKCktPmdldFJlcXVlc3QoKS0+Z2V0Q29udHJvbGxlck5hbWUoKSAhPSAnYWR2YW5jZWQnKSk7IH0gcHVibGljIGZ1bmN0aW9uIGZvcm1hdENvbG9yKCR2YWx1ZSl7IGlmICgkdmFsdWUgPSBwcmVnX3JlcGxhY2UoJy9bXmEtekEtWjAtOVxzXS8nLCAnJywgJHZhbHVlKSl7ICR2YWx1ZSA9ICcjJyAuICR2YWx1ZTsgfSByZXR1cm4gJHZhbHVlOyB9IHB1YmxpYyBmdW5jdGlvbiBpc0ZyZW5kbHlVcmwoKXsgcmV0dXJuICR0aGlzLT5pc0dvbWFnZU5hdmlnYXRpb24oKSAmJiBNYWdlOjpnZXRTdG9yZUNvbmZpZ0ZsYWcoJ2dvbWFnZV9uYXZpZ2F0aW9uL2ZpbHRlcl9zZXR0aW5ncy9mcmVuZGx5dXJsJyk7IH0gcHVibGljIGZ1bmN0aW9uIGdldEZpbHRlclVybCgkcm91dGUgPSAnJywgJHBhcmFtcyA9IGFycmF5KCksICRmaWx0ZXIgPSBmYWxzZSl7IGlmICghJHRoaXMtPmlzRnJlbmRseVVybCgpKXsgJHVybCA9IE1hZ2U6OmdldFVybCgkcm91dGUsICRwYXJhbXMpOyAkYXJyID0gcGFyc2VfdXJsKCR1cmwpOyAkbmV3UGFyYW1zID0gYXJyYXkoKTsgaWYgKCBpc3NldCgkYXJyWydxdWVyeSddKSApIHsgJHBhcnMgPSBleHBsb2RlKCcmYW1wOycsJGFyclsncXVlcnknXSk7IGZvcmVhY2goICRwYXJzIGFzICRfcGFyYW0pIHsgJF9wYXJhbSA9IHN0cl9yZXBsYWNlKCJhamF4PTEmIiwgIiIsICRfcGFyYW0pOyAkX3BhcmFtID0gc3RyX3JlcGxhY2UoImFqYXg9MSIsICIiLCAkX3BhcmFtKTsgaWYgKCAkX3BhcmFtICE9ICcnICkgeyAkbmV3UGFyYW1zW10gPSAkX3BhcmFtOyB9IH0gfSAkdXJsID0gJGFyclsnc2NoZW1lJ10gLiAnOi8vJyAuICRhcnJbJ2hvc3QnXSAuICRhcnJbJ3BhdGgnXSAuICc/JzsgaWYgKCAkbmV3UGFyYW1zICkgeyAkYXJyWydxdWVyeSddID0gaW1wbG9kZSgnJmFtcDsnLCAkbmV3UGFyYW1zKTsgJHVybCAuPSAkYXJyWydxdWVyeSddOyB9IHJldHVybiAkdXJsOyB9ICRtb2RlbCA9IE1hZ2U6OmdldE1vZGVsKCdjb3JlL3VybCcpOyAkcmVxdWVzdF9xdWVyeSA9ICRtb2RlbC0+Z2V0UmVxdWVzdCgpLT5nZXRRdWVyeSgpOyAkYXR0ciA9IE1hZ2U6OnJlZ2lzdHJ5KCdnYW5fZmlsdGVyX2F0dHJpYnV0ZXMnKTsgZm9yZWFjaCgkbW9kZWwtPmdldFJlcXVlc3QoKS0+Z2V0UXVlcnkoKSBhcyAkcGFyYW0gPT4gJHZhbHVlKXsgaWYgKCRwYXJhbSA9PSAnY2F0Jyl7ICR2YWx1ZXMgPSBleHBsb2RlKCcsJywgJHZhbHVlKTsgJHByZXBhcmVfdmFsdWVzID0gYXJyYXkoKTsgZm9yZWFjaCgkdmFsdWVzIGFzICRfdmFsdWUpeyAkY2F0ZWdvcnkgPSBNYWdlOjpnZXRNb2RlbCgnY2F0YWxvZy9jYXRlZ29yeScpLT5sb2FkKCRfdmFsdWUpOyBpZiAoJGNhdGVnb3J5ICYmICRjYXRlZ29yeS0+Z2V0SWQoKSl7ICRwcmVwYXJlX3ZhbHVlc1tdID0gJGNhdGVnb3J5LT5nZXREYXRhKCd1cmxfa2V5Jyk7IH0gfSAkbW9kZWwtPmdldFJlcXVlc3QoKS0+c2V0UXVlcnkoJHBhcmFtLCBpbXBsb2RlKCcsJywgJHByZXBhcmVfdmFsdWVzKSk7IH1lbHNlaWYgKGlzc2V0KCRhdHRyWyRwYXJhbV0pICYmICFpbl9hcnJheSgkYXR0clskcGFyYW1dWyd0eXBlJ10sIGFycmF5KCdwcmljZScsICdkZWNpbWFsJykpKXsgJHZhbHVlcyA9IGV4cGxvZGUoJywnLCAkdmFsdWUpOyAkcHJlcGFyZV92YWx1ZXMgPSBhcnJheSgpOyBmb3JlYWNoKCR2YWx1ZXMgYXMgJF92YWx1ZSl7IGZvcmVhY2goJGF0dHJbJHBhcmFtXVsnb3B0aW9ucyddIGFzICRfayA9PiAkX3YpeyBpZiAoJF92ID09ICRfdmFsdWUpeyAkcHJlcGFyZV92YWx1ZXNbXSA9ICRfazsgYnJlYWs7IH0gfSB9ICRtb2RlbC0+Z2V0UmVxdWVzdCgpLT5zZXRRdWVyeSgkcGFyYW0sIGltcGxvZGUoJywnLCAkcHJlcGFyZV92YWx1ZXMpKTsgfSBlbHNlIGlmICggJHBhcmFtID09ICdwcmljZScgJiYgJGZpbHRlciAhPSAnUHJpY2UnKSB7ICRhdHRyaWJ1dGVJZCA9IE1hZ2U6OmdldFJlc291cmNlTW9kZWwoJ2Vhdi9lbnRpdHlfYXR0cmlidXRlJyktPmdldElkQnlDb2RlKCdjYXRhbG9nX3Byb2R1Y3QnLCdwcmljZScpOyAkYXR0cmlidXRlID0gTWFnZTo6Z2V0TW9kZWwoJ2NhdGFsb2cvcmVzb3VyY2VfZWF2X2F0dHJpYnV0ZScpLT5sb2FkKCRhdHRyaWJ1dGVJZCk7IGlmICggKCRhdHRyaWJ1dGUtPmdldFJhbmdlT3B0aW9ucygpID09IEdvTWFnZV9OYXZpZ2F0aW9uX01vZGVsX0FkbWluaHRtbF9TeXN0ZW1fQ29uZmlnX1NvdXJjZV9GaWx0ZXJfT3B0aW9uc3JhbmdlOjpNQU5VQUxMWSB8fCAkYXR0cmlidXRlLT5nZXRSYW5nZU9wdGlvbnMoKSA9PSBHb01hZ2VfTmF2aWdhdGlvbl9Nb2RlbF9BZG1pbmh0bWxfU3lzdGVtX0NvbmZpZ19Tb3VyY2VfRmlsdGVyX09wdGlvbnNyYW5nZTo6QVVUTykgJiYgJGF0dHJpYnV0ZS0+Z2V0RmlsdGVyVHlwZSgpID09IEdvTWFnZV9OYXZpZ2F0aW9uX01vZGVsX0xheWVyOjpGSUxURVJfVFlQRV9ERUZBVUxUICkgeyAkdmFsdWVzID0gZXhwbG9kZSgnLCcsICR2YWx1ZSk7ICRwYXJhbXNbJ19xdWVyeSddWydwcmljZV9mcm9tJ10gPSAkdmFsdWVzWzBdOyAkcGFyYW1zWydfcXVlcnknXVsncHJpY2VfdG8nXSA9ICR2YWx1ZXNbMV07IHVuc2V0KCRwYXJhbXNbJ19xdWVyeSddWydwcmljZSddKTsgfSB9IH0gZm9yZWFjaCAoJHBhcmFtc1snX3F1ZXJ5J10gYXMgJHBhcmFtID0+ICR2YWx1ZSl7IGlmICgkdmFsdWUpeyBpZiAoJHBhcmFtID09ICdjYXQnKXsgJHZhbHVlcyA9IGV4cGxvZGUoJywnLCAkdmFsdWUpOyAkcHJlcGFyZV92YWx1ZXMgPSBhcnJheSgpOyBmb3JlYWNoKCR2YWx1ZXMgYXMgJF92YWx1ZSl7ICRjYXRlZ29yeSA9IE1hZ2U6OmdldE1vZGVsKCdjYXRhbG9nL2NhdGVnb3J5JyktPmxvYWQoJF92YWx1ZSk7IGlmICgkY2F0ZWdvcnkgJiYgJGNhdGVnb3J5LT5nZXRJZCgpKXsgJHByZXBhcmVfdmFsdWVzW10gPSAkY2F0ZWdvcnktPmdldERhdGEoJ3VybF9rZXknKTsgfSB9ICRwYXJhbXNbJ19xdWVyeSddWyRwYXJhbV0gPSBpbXBsb2RlKCcsJywgJHByZXBhcmVfdmFsdWVzKTsgfWVsc2VpZiAoaXNzZXQoJGF0dHJbJHBhcmFtXSkgJiYgIWluX2FycmF5KCRhdHRyWyRwYXJhbV1bJ3R5cGUnXSwgYXJyYXkoJ3ByaWNlJywgJ2RlY2ltYWwnKSkpeyAkdmFsdWVzID0gZXhwbG9kZSgnLCcsICR2YWx1ZSk7ICRwcmVwYXJlX3ZhbHVlcyA9IGFycmF5KCk7IGZvcmVhY2goJHZhbHVlcyBhcyAkX3ZhbHVlKXsgZm9yZWFjaCgkYXR0clskcGFyYW1dWydvcHRpb25zJ10gYXMgJF9rID0+ICRfdil7IGlmICgkX3YgPT0gJF92YWx1ZSl7ICRwcmVwYXJlX3ZhbHVlc1tdID0gJF9rOyBicmVhazsgfSB9IH0gJHBhcmFtc1snX3F1ZXJ5J11bJHBhcmFtXSA9IGltcGxvZGUoJywnLCAkcHJlcGFyZV92YWx1ZXMpOyB9IGVsc2UgaWYgKCAkcGFyYW0gPT0gJ3ByaWNlJyAmJiAkZmlsdGVyICE9ICdQcmljZScgKSB7ICRhdHRyaWJ1dGVJZCA9IE1hZ2U6OmdldFJlc291cmNlTW9kZWwoJ2Vhdi9lbnRpdHlfYXR0cmlidXRlJyktPmdldElkQnlDb2RlKCdjYXRhbG9nX3Byb2R1Y3QnLCdwcmljZScpOyAkYXR0cmlidXRlID0gTWFnZTo6Z2V0TW9kZWwoJ2NhdGFsb2cvcmVzb3VyY2VfZWF2X2F0dHJpYnV0ZScpLT5sb2FkKCRhdHRyaWJ1dGVJZCk7IGlmICggKCRhdHRyaWJ1dGUtPmdldFJhbmdlT3B0aW9ucygpID09IEdvTWFnZV9OYXZpZ2F0aW9uX01vZGVsX0FkbWluaHRtbF9TeXN0ZW1fQ29uZmlnX1NvdXJjZV9GaWx0ZXJfT3B0aW9uc3JhbmdlOjpNQU5VQUxMWSB8fCAkYXR0cmlidXRlLT5nZXRSYW5nZU9wdGlvbnMoKSA9PSBHb01hZ2VfTmF2aWdhdGlvbl9Nb2RlbF9BZG1pbmh0bWxfU3lzdGVtX0NvbmZpZ19Tb3VyY2VfRmlsdGVyX09wdGlvbnNyYW5nZTo6QVVUTykgJiYgJGF0dHJpYnV0ZS0+Z2V0RmlsdGVyVHlwZSgpID09IEdvTWFnZV9OYXZpZ2F0aW9uX01vZGVsX0xheWVyOjpGSUxURVJfVFlQRV9ERUZBVUxUICkgeyBpZiAoc3RycG9zKCR2YWx1ZSwgJzsnKSl7ICR2YWx1ZXMgPSBleHBsb2RlKCc7JywgJHZhbHVlKTsgfWVsc2UgeyAkdmFsdWVzID0gZXhwbG9kZSgnLCcsICR2YWx1ZSk7IH0gJHBhcmFtc1snX3F1ZXJ5J11bJ3ByaWNlX2Zyb20nXSA9ICR2YWx1ZXNbMF07ICRwYXJhbXNbJ19xdWVyeSddWydwcmljZV90byddID0gJHZhbHVlc1sxXTsgdW5zZXQoJHBhcmFtc1snX3F1ZXJ5J11bJ3ByaWNlJ10pOyB9IH0gfSB9ICR1cmwgPSAkbW9kZWwtPmdldFVybCgkcm91dGUsICRwYXJhbXMpOyAkYXJyID0gcGFyc2VfdXJsKCR1cmwpOyAkcGFycyA9IGV4cGxvZGUoJyZhbXA7JywkYXJyWydxdWVyeSddKTsgJG5ld1BhcmFtcyA9IGFycmF5KCk7IGZvcmVhY2goICRwYXJzIGFzICRfcGFyYW0pIHsgJF9wYXJhbSA9IHN0cl9yZXBsYWNlKCJhamF4PTEmIiwgIiIsICRfcGFyYW0pOyAkX3BhcmFtID0gc3RyX3JlcGxhY2UoImFqYXg9MSIsICIiLCAkX3BhcmFtKTsgaWYgKCAkX3BhcmFtICE9ICcnICkgeyAkbmV3UGFyYW1zW10gPSAkX3BhcmFtOyB9IH0gJHVybCA9ICRhcnJbJ3NjaGVtZSddIC4gJzovLycgLiAkYXJyWydob3N0J10gLiAkYXJyWydwYXRoJ10gLiAnPyc7IGlmICggJG5ld1BhcmFtcyApIHsgJGFyclsncXVlcnknXSA9IGltcGxvZGUoJyZhbXA7JywgJG5ld1BhcmFtcyk7ICR1cmwgLj0gJGFyclsncXVlcnknXTsgfSBmb3JlYWNoKCRyZXF1ZXN0X3F1ZXJ5IGFzICRwYXJhbSA9PiAkdmFsdWUpeyAkbW9kZWwtPmdldFJlcXVlc3QoKS0+c2V0UXVlcnkoJHBhcmFtLCAkdmFsdWUpOyB9IHJldHVybiAkdXJsOyB9IHB1YmxpYyBmdW5jdGlvbiBmb3JtYXRVcmxWYWx1ZSgkdmFsdWUpeyAkdmFsdWUgPSBwcmVnX3JlcGxhY2UoJyNbXjAtOWEtel0rI2knLCAnXycsIE1hZ2U6OmhlbHBlcignY2F0YWxvZy9wcm9kdWN0X3VybCcpLT5mb3JtYXQoJHZhbHVlKSk7ICR2YWx1ZSA9IHN0cnRvbG93ZXIoJHZhbHVlKTsgJHZhbHVlID0gdHJpbSgkdmFsdWUsICctJyk7IHJldHVybiAkdmFsdWU7IH0gcHVibGljIGZ1bmN0aW9uIGlzTW9iaWxlRGV2aWNlKCl7ICR1c2VyX2FnZW50ID0gc3RydG9sb3dlcigkX1NFUlZFUlsnSFRUUF9VU0VSX0FHRU5UJ10pOyBpZiAoISR1c2VyX2FnZW50IHx8IHN0cnBvcygkdXNlcl9hZ2VudCwgJ2lwYWQnKSkgcmV0dXJuIGZhbHNlOyAkcmVnZXhfbWF0Y2g9Ii8obm9raWF8aXBob25lfGFuZHJvaWR8bW90b3JvbGF8Xm1vdC18c29mdGJhbmt8Zm9tYXxkb2NvbW98a2RkaXx1cC5icm93c2VyfHVwLmxpbmt8IjsgJHJlZ2V4X21hdGNoLj0iaHRjfGRvcG9kfGJsYXplcnxuZXRmcm9udHxoZWxpb3xob3NpbnxodWF3ZWl8bm92YXJyYXxDb29sUGFkfHdlYm9zfHRlY2hmYWl0aHxwYWxtc291cmNlfCI7ICRyZWdleF9tYXRjaC49ImJsYWNrYmVycnl8YWxjYXRlbHxhbW9pfGt0b3VjaHxuZXhpYW58c2Ftc3VuZ3xec2FtLXxzW2NnXWh8XmxnZXxlcmljc3NvbnxwaGlsaXBzfHNhZ2VtfHdlbGxjb218YnVuamFsbG9vfG1hdWl8IjsgJHJlZ2V4X21hdGNoLj0ic3ltYmlhbnxzbWFydHBob25lfG1pZHB8d2FwfHBob25lfHdpbmRvd3MgY2V8aWVtb2JpbGV8XnNwaWNlfF5iaXJkfF56dGUtfGxvbmdjb3N8cGFudGVjaHxnaW9uZWV8XnNpZS18cG9ydGFsbW1tfCI7ICRyZWdleF9tYXRjaC49ImppZ3MgYnJvd3NlcnxoaXB0b3B8XnVjd2VifF5iZW5xfGhhaWVyfF5sY3R8b3BlcmFzKm1vYml8b3BlcmEqbWluaXwzMjB4MzIwfDI0MHgzMjB8MTc2eDIyMCI7ICRyZWdleF9tYXRjaC49IikvaSI7IHJldHVybiBwcmVnX21hdGNoKCRyZWdleF9tYXRjaCwgc3RydG9sb3dlcigkdXNlcl9hZ2VudCkpOyB9IHB1YmxpYyBmdW5jdGlvbiBJc0dvb2dsZWJvdCgpeyBpZihwcmVnX21hdGNoKCIvR29vZ2xlLyIsJF9TRVJWRVJbJ0hUVFBfVVNFUl9BR0VOVCddKSB8fCBwcmVnX21hdGNoKCIvYm90LyIsJF9TRVJWRVJbJ0hUVFBfVVNFUl9BR0VOVCddKSl7ICRpcCA9ICRfU0VSVkVSWydSRU1PVEVfQUREUiddOyAkbmFtZSA9IGdldGhvc3RieWFkZHIoJGlwKTsgaWYocHJlZ19tYXRjaCgiL0dvb2dsZWJvdC8iLCRuYW1lKSB8fCBwcmVnX21hdGNoKCIvYm90LyIsJG5hbWUpKXsgJGhvc3RzID0gZ2V0aG9zdGJ5bmFtZWwoJG5hbWUpOyBmb3JlYWNoKCRob3N0cyBhcyAkaG9zdCl7IGlmICgkaG9zdCA9PSAkaXApeyByZXR1cm4gdHJ1ZTsgfSB9IHJldHVybiBmYWxzZTsgfWVsc2V7IHJldHVybiBmYWxzZTsgfSB9ZWxzZXsgcmV0dXJuIHRydWU7IH0gcmV0dXJuIGZhbHNlOyB9IHB1YmxpYyBmdW5jdGlvbiBnZXRGaWx0ZXJJdGVtQ291bnQoJGZpbHRlcikgeyAkY291bnQgPSAwOyBpZiAoICRmaWx0ZXIgJiYgJGZpbHRlci0+Z2V0SXRlbXMoKSApIHsgZm9yZWFjaCggJGZpbHRlci0+Z2V0SXRlbXMoKSBhcyAkaXRlbSApIHsgJGNvdW50ICs9ICRpdGVtLT5nZXRDb3VudCgpOyB9IH0gaWYgKCAkY291bnQgPT0gMCAmJiAkZmlsdGVyLT5nZXROYW1lKCkgPT0gJ1N0b2NrJyApIHsgcmV0dXJuIDE7IH0gcmV0dXJuICRjb3VudDsgfSBwdWJsaWMgZnVuY3Rpb24gZ2V0RmlsdGVyKCkgeyAkZmlsdGVyID0gTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9uYXZpZ2F0aW9uL2ZpbHRlci9maWx0ZXJfYnRuX3R4dCcpOyBpZiAoICRmaWx0ZXIgPT0gJycgKSB7ICRmaWx0ZXIgPSAkdGhpcy0+X18oJ0ZpbHRlcicpOyB9IHJldHVybiAkZmlsdGVyOyB9IHB1YmxpYyBmdW5jdGlvbiBnZXRDbGVhckFsbCgpIHsgJGNsZWFyID0gTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9uYXZpZ2F0aW9uL2ZpbHRlci9jbGVhcl9idG5fdHh0Jyk7IGlmICggJGNsZWFyID09ICcnICkgeyAkY2xlYXIgPSAkdGhpcy0+X18oJ0NsZWFyIEFsbCcpOyB9IHJldHVybiAkY2xlYXI7IH0gcHVibGljIGZ1bmN0aW9uIGdldE1vcmUoKSB7ICRtb3JlID0gTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9uYXZpZ2F0aW9uL2ZpbHRlci9tb3JlX2J0bl90eHQnKTsgaWYgKCAkbW9yZSA9PSAnJyApIHsgJG1vcmUgPSAkdGhpcy0+X18oJ01vcmUnKTsgfSByZXR1cm4gJG1vcmU7IH0gcHVibGljIGZ1bmN0aW9uIGdldExlc3MoKSB7ICRsZXNzID0gTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9uYXZpZ2F0aW9uL2ZpbHRlci9sZXNzX2J0bl90eHQnKTsgaWYgKCAkbGVzcyA9PSAnJyApIHsgJGxlc3MgPSAkdGhpcy0+X18oJ0xlc3MnKTsgfSByZXR1cm4gJGxlc3M7IH0gcHVibGljIGZ1bmN0aW9uIGdldFNob3dtb3JlKCkgeyAkc2hvd21vcmUgPSBNYWdlOjpnZXRTdG9yZUNvbmZpZygnZ29tYWdlX25hdmlnYXRpb24vZmlsdGVyL3Nob3dtb3JlX2J0bl90eHQnKTsgaWYgKCAkc2hvd21vcmUgPT0gJycgKSB7ICRzaG93bW9yZSA9ICR0aGlzLT5fXygnU2hvdyBtb3JlIHByb2R1Y3RzJyk7IH0gcmV0dXJuICRzaG93bW9yZTsgfSBwdWJsaWMgZnVuY3Rpb24gZ2V0QmFja3RvdG9wKCkgeyAkYmFja3RvdG9wID0gTWFnZTo6Z2V0U3RvcmVDb25maWcoJ2dvbWFnZV9uYXZpZ2F0aW9uL2ZpbHRlci9iYWNrdG90b3BfYnRuX3R4dCcpOyBpZiAoICRiYWNrdG90b3AgPT0gJycgKSB7ICRiYWNrdG90b3AgPSAkdGhpcy0+X18oJ0JhY2sgdG8gVG9wJyk7IH0gcmV0dXJuICRiYWNrdG90b3A7IH0gcHVibGljIGZ1bmN0aW9uIGlzRW50ZXJwcmlzZSgpIHsgaWYgKCBNYWdlOjpnZXRDb25maWcgKCktPmdldE1vZHVsZUNvbmZpZyAoICdFbnRlcnByaXNlX0VudGVycHJpc2UnICkgJiYgTWFnZTo6Z2V0Q29uZmlnICgpLT5nZXRNb2R1bGVDb25maWcgKCAnRW50ZXJwcmlzZV9BZG1pbkd3cycgKSAmJiBNYWdlOjpnZXRDb25maWcgKCktPmdldE1vZHVsZUNvbmZpZyAoICdFbnRlcnByaXNlX0NoZWNrb3V0JyApICYmIE1hZ2U6OmdldENvbmZpZyAoKS0+Z2V0TW9kdWxlQ29uZmlnICggJ0VudGVycHJpc2VfQ3VzdG9tZXInICkgKSB7IHJldHVybiB0cnVlOyB9IHJldHVybiBmYWxzZTsgfSBwdWJsaWMgZnVuY3Rpb24gZ2V0U2lkZSgkdHlwZSkgeyBzd2l0Y2ggKCR0eXBlKXsgY2FzZSBHb01hZ2VfTmF2aWdhdGlvbl9Nb2RlbF9BZG1pbmh0bWxfU3lzdGVtX0NvbmZpZ19Tb3VyY2VfRmlsdGVyX0F0dHJpYnV0ZWxvY2F0aW9uOjpMRUZUX0JMT0NLOiByZXR1cm4gJ2xlZnQnOyBicmVhazsgY2FzZSBHb01hZ2VfTmF2aWdhdGlvbl9Nb2RlbF9BZG1pbmh0bWxfU3lzdGVtX0NvbmZpZ19Tb3VyY2VfRmlsdGVyX0F0dHJpYnV0ZWxvY2F0aW9uOjpDT05URU5UOiByZXR1cm4gJ2NvbnRlbnQnOyBicmVhazsgY2FzZSBHb01hZ2VfTmF2aWdhdGlvbl9Nb2RlbF9BZG1pbmh0bWxfU3lzdGVtX0NvbmZpZ19Tb3VyY2VfRmlsdGVyX0F0dHJpYnV0ZWxvY2F0aW9uOjpSSUdIVF9CTE9DSzogcmV0dXJuICdyaWdodCc7IGJyZWFrOyBkZWZhdWx0OiByZXR1cm4gJ2xlZnQnOyBicmVhazsgfSB9IHB1YmxpYyBmdW5jdGlvbiBnZXRDbGVhckxpbmtVcmwoJF9maWx0ZXIpeyBpZiAoICRfZmlsdGVyLT5nZXROYW1lKCkgPT0gJ1ByaWNlJyB8fCAkX2ZpbHRlci0+Z2V0TmFtZSgpID09ICdTcGVjaWFsIFByaWNlJykgeyBpZiAoICRfZmlsdGVyLT5nZXROYW1lKCkgPT0gJ1ByaWNlJyApIHsgJGNvZGUgPSAncHJpY2UnOyB9IGVsc2UgeyAkY29kZSA9ICdzcGVjaWFsX3ByaWNlJzsgfSAkYXR0cmlidXRlSWQgPSBNYWdlOjpnZXRSZXNvdXJjZU1vZGVsKCdlYXYvZW50aXR5X2F0dHJpYnV0ZScpLT5nZXRJZEJ5Q29kZSgnY2F0YWxvZ19wcm9kdWN0JywkY29kZSk7ICRhdHRyaWJ1dGUgPSBNYWdlOjpnZXRNb2RlbCgnY2F0YWxvZy9yZXNvdXJjZV9lYXZfYXR0cmlidXRlJyktPmxvYWQoJGF0dHJpYnV0ZUlkKTsgaWYgKCBpbl9hcnJheSgkYXR0cmlidXRlLT5nZXRGaWx0ZXJUeXBlKCksIGFycmF5KCBHb01hZ2VfTmF2aWdhdGlvbl9Nb2RlbF9MYXllcjo6RklMVEVSX1RZUEVfU0xJREVSLCBHb01hZ2VfTmF2aWdhdGlvbl9Nb2RlbF9MYXllcjo6RklMVEVSX1RZUEVfU0xJREVSX0lOUFVULCBHb01hZ2VfTmF2aWdhdGlvbl9Nb2RlbF9MYXllcjo6RklMVEVSX1RZUEVfSU5QVVRfU0xJREVSKSAmJiAhTWFnZTo6aGVscGVyKCdnb21hZ2VfbmF2aWdhdGlvbicpLT5pc01vYmlsZURldmljZSgpKSB8fCAoJGF0dHJpYnV0ZS0+Z2V0RmlsdGVyVHlwZSgpID09IEdvTWFnZV9OYXZpZ2F0aW9uX01vZGVsX0xheWVyOjpGSUxURVJfVFlQRV9ERUZBVUxUICYmICRhdHRyaWJ1dGUtPmdldFJhbmdlT3B0aW9ucygpICE9IEdvTWFnZV9OYXZpZ2F0aW9uX01vZGVsX0FkbWluaHRtbF9TeXN0ZW1fQ29uZmlnX1NvdXJjZV9GaWx0ZXJfT3B0aW9uc3JhbmdlOjpOTykpIHsgJHBhcmFtcyA9IGFycmF5KCk7ICRwYXJhbXNbJ19ub3NpZCddID0gdHJ1ZTsgJHBhcmFtc1snX2N1cnJlbnQnXSA9IHRydWU7ICRwYXJhbXNbJ191c2VfcmV3cml0ZSddID0gdHJ1ZTsgJHBhcmFtc1snX2VzY2FwZSddID0gZmFsc2U7ICR1cmwgPSBNYWdlOjpoZWxwZXIoJ2dvbWFnZV9uYXZpZ2F0aW9uJyktPmdldEZpbHRlclVybCgnKi8qLyonLCAkcGFyYW1zKTsgJGNsZWFuX3VybCA9IE1hZ2U6OmhlbHBlcignZ29tYWdlX25hdmlnYXRpb24nKS0+Z2V0RmlsdGVyVXJsKCcqLyovKicsIGFycmF5KCdfY3VycmVudCc9PnRydWUsICdfbm9zaWQnPT50cnVlLCAnX3VzZV9yZXdyaXRlJz0+dHJ1ZSwgJ19xdWVyeSc9PmFycmF5KCksICdfZXNjYXBlJz0+ZmFsc2UpKTsgaWYgKCBzdHJwb3MoJGNsZWFuX3VybCwgIj8iKSAhPT0gZmFsc2UgKSB7ICRjbGVhbl91cmwgPSBzdWJzdHIoJGNsZWFuX3VybCwgMCwgc3RycG9zKCRjbGVhbl91cmwsICc/JykpOyB9ICRwYXJhbXMgPSBzdHJfcmVwbGFjZSgkY2xlYW5fdXJsLCAiIiwgJHVybCk7ICRwYXJhbXMgPSBzdHJfcmVwbGFjZSgiPyIsICIiLCAkcGFyYW1zKTsgJHBhckFycmF5ID0gZXhwbG9kZSgiJiIsICRwYXJhbXMpOyAkbmV3UGFyQXJyYXkgPSBhcnJheSgpOyBmb3JlYWNoKCAkcGFyQXJyYXkgYXMgJHBhciApIHsgJGV4cGFyID0gZXhwbG9kZSgiPSIsICRwYXIpOyBpZiAoICRleHBhclswXSAhPSAkY29kZSAuICdfZnJvbScgJiYgJGV4cGFyWzBdICE9ICRjb2RlIC4gJ190bycgKSB7ICRuZXdQYXJBcnJheVtdID0gJHBhcjsgfSB9IGlmICggJG5ld1BhckFycmF5ICkgeyBpZiAoICRfZmlsdGVyLT5nZXRBamF4RW5hYmxlZCgpICkgeyByZXR1cm4gJGNsZWFuX3VybCAuICc/JyAuIGltcGxvZGUoIiYiLCAkbmV3UGFyQXJyYXkpIC4gJyZhamF4PTEnOyB9IGVsc2UgeyByZXR1cm4gJGNsZWFuX3VybCAuICc/JyAuIGltcGxvZGUoIiYiLCAkbmV3UGFyQXJyYXkpOyB9IH0gZWxzZSB7IGlmICggJF9maWx0ZXItPmdldEFqYXhFbmFibGVkKCkgKSB7IHJldHVybiAkY2xlYW5fdXJsIC4gJz9hamF4PTEnOyB9IGVsc2UgeyByZXR1cm4gJGNsZWFuX3VybDsgfSB9IH0gZWxzZSB7IHJldHVybiAkX2ZpbHRlci0+Z2V0Q2xlYXJMaW5rVXJsKCk7IH0gfSBlbHNlIHsgcmV0dXJuICRfZmlsdGVyLT5nZXRDbGVhckxpbmtVcmwoKTsgfSB9IHB1YmxpYyBmdW5jdGlvbiBub3RpZnkoKXsgJGZyZXF1ZW5jeSA9IGludHZhbChNYWdlOjphcHAoKS0+bG9hZENhY2hlKCdnb21hZ2Vfbm90aWZpY2F0aW9uc19mcmVxdWVuY3knKSk7IGlmICghJGZyZXF1ZW5jeSl7ICRmcmVxdWVuY3kgPSAyNDsgfSAkbGFzdF91cGRhdGUgPSBpbnR2YWwoTWFnZTo6YXBwKCktPmxvYWRDYWNoZSgnZ29tYWdlX25vdGlmaWNhdGlvbnNfbGFzdF91cGRhdGUnKSk7IGlmICgoJGZyZXF1ZW5jeSAqIDYwICogNjAgKyAkbGFzdF91cGRhdGUpID4gdGltZSgpKSB7IHJldHVybiBmYWxzZTsgfSAkdGltZXN0YW1wID0gJGxhc3RfdXBkYXRlOyBpZiAoISR0aW1lc3RhbXApeyAkdGltZXN0YW1wID0gdGltZSgpOyB9IHRyeXsgJGNoID0gY3VybF9pbml0KCk7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9VUkwsIHNwcmludGYoJ2h0dHBzOi8vd3d3LmdvbWFnZS5jb20vaW5kZXgucGhwL2dvbWFnZV9ub3RpZmljYXRpb24vaW5kZXgvZGF0YScpKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BPU1QsIHRydWUpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUE9TVEZJRUxEUywgJ3NrdT1hZHZhbmNlZC1uYXZpZ2F0aW9uJnRpbWVzdGFtcD0nLiR0aW1lc3RhbXAuJyZ2ZXI9Jy51cmxlbmNvZGUoJzQuMScpKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1RJTUVPVVQsIDMwKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCB0cnVlKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1NTTF9WRVJJRllQRUVSLCAwKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1NTTF9WRVJJRllIT1NULCAwKTsgJGNvbnRlbnQgPSBjdXJsX2V4ZWMoJGNoKTsgJHJlc3VsdCA9IFplbmRfSnNvbjo6ZGVjb2RlKCRjb250ZW50KTsgaWYgKCRyZXN1bHQgJiYgaXNzZXQoJHJlc3VsdFsnZnJlcXVlbmN5J10pICYmICgkcmVzdWx0WydmcmVxdWVuY3knXSAhPSAkZnJlcXVlbmN5KSl7IE1hZ2U6OmFwcCgpLT5zYXZlQ2FjaGUoJHJlc3VsdFsnZnJlcXVlbmN5J10sICdnb21hZ2Vfbm90aWZpY2F0aW9uc19mcmVxdWVuY3knKTsgfSBpZiAoJHJlc3VsdCAmJiBpc3NldCgkcmVzdWx0WydkYXRhJ10pKXsgaWYgKCFlbXB0eSgkcmVzdWx0WydkYXRhJ10pKXsgTWFnZTo6Z2V0TW9kZWwoJ2FkbWlubm90aWZpY2F0aW9uL2luYm94JyktPnBhcnNlKCRyZXN1bHRbJ2RhdGEnXSk7IH0gfSB9IGNhdGNoIChFeGNlcHRpb24gJGUpe30gTWFnZTo6YXBwKCktPnNhdmVDYWNoZSh0aW1lKCksICdnb21hZ2Vfbm90aWZpY2F0aW9uc19sYXN0X3VwZGF0ZScpOyB9IHB1YmxpYyBmdW5jdGlvbiBnZXRJc0FueW1vcmVWZXJzaW9uKCRtYWpvciwgJG1pbm9yLCAkcmV2aXNpb24gPSAwKSB7ICR2ZXJzaW9uX2luZm8gPSBNYWdlOjpnZXRWZXJzaW9uKCk7ICR2ZXJzaW9uX2luZm8gPSBleHBsb2RlKCcuJywgJHZlcnNpb25faW5mbyk7IGlmICgkdmVyc2lvbl9pbmZvWzBdID4gJG1ham9yKSB7IHJldHVybiB0cnVlOyB9IGVsc2VpZiAoJHZlcnNpb25faW5mb1swXSA9PSAkbWFqb3IpIHsgaWYgKCR2ZXJzaW9uX2luZm9bMV0gPiAkbWlub3IpIHsgcmV0dXJuIHRydWU7IH0gZWxzZWlmICgkdmVyc2lvbl9pbmZvWzFdID09ICRtaW5vcikgeyBpZiAoJHZlcnNpb25faW5mb1syXSA+PSAkcmV2aXNpb24pIHsgcmV0dXJuIHRydWU7IH0gZWxzZSB7IHJldHVybiBmYWxzZTsgfSB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0gfSBlbHNlIHsgcmV0dXJuIGZhbHNlOyB9IH0gfQ=="));